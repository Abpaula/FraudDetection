config {
  common {
    spark {
      name = "RealTime Creditcard FraudDetection"
      gracefulShutdown = "true"
      }

    kafka {
      key.deserializer = "org.apache.kafka.common.deserialization.StringSerializer"
      value.deserializer = "org.apache.kafka.common.deserialization.StringSerializer"
      topic = "creditcardTransaction"
      group.id = "RealTime Creditcard FraudDetection"
      enable.auto.commit = "false"
    }

    cassandra {
      keyspace = "creditcard"
      table = "transaction"
    }
  }

  local {
    spark {
      master = "local[*]"
      model.path = "file:///home/kafka/frauddetection/RandomForestModel"
      model.preprocessing.path = "file:///home/kafka/frauddetection/PreprocessingModel"
      transaction.datasource = "file:///home/kafka/frauddetection/data/transactions.csv"
      customer.datasource ="file:///home/kafka/frauddetection/data/customer.csv"
      shutdownPath = "file:///tmp/shutdownmarker"
      checkpoint = "file:///tmp/checkpoint"
    }

    kafka {
      bootstrap.servers = "localhost:9092"
    }

    cassandra {
          host = "localhost"
    }
  }


  cluster {
    spark {
      master = "Spark Standalone Master Address"
      model.path = "S3Location/RandomForestModel"
      model.preprocessing.path = "S3Location/PreprocessingModel"
      transaction.datasource = "S3Location/transactions.csv"
      customer.datasource ="S3Location/customer.csv"
      shutdownMarker = "S3 Location/shutdownmarker"
      checkpoint = "S3 Location/checkpoint"
    }

    kafka {
      bootstrap.servers = "publicIp:9092"
    }

    cassandra {
      host = "publicIp"
    }
  }
}